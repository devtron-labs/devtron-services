/*
 * Copyright (c) 2024. Devtron Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * grafeas.proto
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: version not set
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package grafeas

import (
	"time"
)

type VulnerabilityDetail struct {
	// Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/) in which the vulnerability manifests. Examples include distro or storage location for vulnerable jar.
	CpeUri string `json:"cpeUri,omitempty"`
	// Required. The name of the package where the vulnerability was found.
	Package_ string `json:"package,omitempty"`
	// The min version of the package in which the vulnerability exists.
	MinAffectedVersion *PackageVersion `json:"minAffectedVersion,omitempty"`
	// The max version of the package in which the vulnerability exists.
	MaxAffectedVersion *PackageVersion `json:"maxAffectedVersion,omitempty"`
	// The severity (eg: distro assigned severity) for this vulnerability.
	SeverityName string `json:"severityNname,omitempty"`
	// A vendor-specific description of this note.
	Description string `json:"description,omitempty"`
	// The fix for this specific package version.
	FixedLocation *VulnerabilityVulnerabilityLocation `json:"fixed_location,omitempty"`
	// The type of package; whether native or non native(ruby gems, node.js packages etc).
	PackageType string `json:"packageType,omitempty"`
	// Whether this detail is obsolete. Occurrences are expected not to point to obsolete details.
	IsObsolete bool `json:"isObsolete,omitempty"`
	// The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker.
	SourceUpdateTime time.Time `json:"sourceUpdateTime,omitempty"`
}
